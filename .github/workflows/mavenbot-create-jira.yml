# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: "[mavenbot] Create JIRA issue (@mavenbot create jira)"

on:
  issue_comment:
    types: [created]

jobs:
  create-jira-issue:
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '@mavenbot create jira')
    runs-on: ubuntu-latest
    steps:
      - name: Get PR details
        id: pr_details
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.name,
              pull_number: context.issue.number
            });
            return {
              title: pr.data.title,
              body: pr.data.body,
              html_url: pr.data.html_url
            }

      - name: Create JIRA issue
        id: create_issue
        env:
          JIRA_BASE_URL: http://issues.apache.org/jira
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          PR_TITLE=$(echo '${{ fromJson(steps.pr_details.outputs.result).title }}' | jq -sRr @uri)
          PR_BODY=$(echo '${{ fromJson(steps.pr_details.outputs.result).body }}' | jq -sRr @uri)
          PR_URL=$(echo '${{ fromJson(steps.pr_details.outputs.result).html_url }}' | jq -sRr @uri)
          
          RESPONSE=$(curl -u "$JIRA_USER_EMAIL:$JIRA_API_TOKEN" \
            -X POST \
            -H "Content-Type: application/json" \
            --data '{
              "fields": {
                "project": {"key": "MNG"},
                "summary": "Dependabot PR: '"$PR_TITLE"'",
                "description": "Dependabot has created a new pull request:\n\n'"$PR_URL"'\n\nSummary: '"$PR_TITLE"'\n\n'"$PR_BODY"'",
                "issuetype": {"name": "Task"}
              }
            }' \
            "$JIRA_BASE_URL/rest/api/2/issue/")
          
          ISSUE_KEY=$(echo $RESPONSE | jq -r '.key')
          echo "ISSUE_KEY=$ISSUE_KEY" >> $GITHUB_OUTPUT

      - name: Comment PR with JIRA issue link
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: 'Created JIRA issue: [${{ steps.create_issue.outputs.ISSUE_KEY }}](${{ env.JIRA_BASE_URL }}/browse/${{ steps.create_issue.outputs.ISSUE_KEY }})'
            })